{"version":3,"file":"vue-virtual-scroller.esm.js","sources":["../src/config.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue?rollup-plugin-vue=script.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/RecycleScroller.vue","../src/components/DynamicScroller.vue?rollup-plugin-vue=script.js","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue?rollup-plugin-vue=script.js","../src/components/DynamicScrollerItem.vue","../src/mixins/IdState.js","../src/index.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    useRelativePositioning: {\n      type: Boolean,\n      default: false,\n    },\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    viewPosition (view) {\n      const isVertical = this.direction === 'vertical'\n      let verticalAxis\n\n      if (isVertical) {\n        if (this.useRelativePositioning) {\n          verticalAxis = 'top'\n        } else {\n          verticalAxis = 'Y'\n        }\n      } else {\n        if (this.useRelativePositioning) {\n          verticalAxis = 'left'\n        } else {\n          verticalAxis = 'X'\n        }\n      }\n\n      if (this.ready) {\n        if (this.useRelativePositioning) {\n          return {\n            [verticalAxis]: view.position + 'px',\n            'will-change': 'unset',\n          }\n        } else {\n          return {\n            transform: `translate${verticalAxis}(${view.position}px)`,\n          }\n        }\n      }\n\n      return null\n    },\n\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n\n      if (!count) {\n        startIndex = endIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = 0\n        endIndex = this.prerender\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize)\n          endIndex = Math.ceil(scroll.end / itemSize)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n\n          totalSize = count * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.findIndex(\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\n              )\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n        } else {\n          view.position = i * itemSize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\n        passive: true,\n      } : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = index * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      if (this.direction === 'vertical') {\n        this.$el.scrollTop = position\n      } else {\n        this.$el.scrollLeft = position\n      }\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <div\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n    >\n      <div\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"viewPosition(view)\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"{ hover: hoverKey === view.nr.key }\"\n        @mouseenter=\"hoverKey = view.nr.key\"\n        @mouseleave=\"hoverKey = null\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"$slots.after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    useRelativePositioning: {\n      type: Boolean,\n      default: false,\n    },\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    viewPosition (view) {\n      const isVertical = this.direction === 'vertical'\n      let verticalAxis\n\n      if (isVertical) {\n        if (this.useRelativePositioning) {\n          verticalAxis = 'top'\n        } else {\n          verticalAxis = 'Y'\n        }\n      } else {\n        if (this.useRelativePositioning) {\n          verticalAxis = 'left'\n        } else {\n          verticalAxis = 'X'\n        }\n      }\n\n      if (this.ready) {\n        if (this.useRelativePositioning) {\n          return {\n            [verticalAxis]: view.position + 'px',\n            'will-change': 'unset',\n          }\n        } else {\n          return {\n            transform: `translate${verticalAxis}(${view.position}px)`,\n          }\n        }\n      }\n\n      return null\n    },\n\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n\n      if (!count) {\n        startIndex = endIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = 0\n        endIndex = this.prerender\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize)\n          endIndex = Math.ceil(scroll.end / itemSize)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n\n          totalSize = count * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.findIndex(\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\n              )\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n        } else {\n          view.position = i * itemSize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\n        passive: true,\n      } : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = index * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      if (this.direction === 'vertical') {\n        this.$el.scrollTop = position\n      } else {\n        this.$el.scrollLeft = position\n      }\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  inheritAttrs: false,\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n\n    useRelativePositioning: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n  },\n\n  created () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    :use-relative-positioning=\"useRelativePositioning\"\n    key-field=\"id\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  inheritAttrs: false,\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n\n    useRelativePositioning: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n  },\n\n  created () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n","\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      return this.vscrollData.simpleArray ? this.index : this.item[this.vscrollData.keyField]\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData) {\n        this.$_watchData = this.$watch('data', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = Math.round(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      return this.vscrollData.simpleArray ? this.index : this.item[this.vscrollData.keyField]\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData) {\n        this.$_watchData = this.$watch('data', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = Math.round(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n"],"names":["itemsLimit","props","items","type","Array","required","keyField","String","default","direction","validator","value","includes","simpleArray","length","supportsPassive","window","opts","Object","defineProperty","get","addEventListener","e","uid","name","components","ResizeObserver","directives","ObserveVisibility","useRelativePositioning","Boolean","itemSize","Number","minItemSize","sizeField","typeField","buffer","pageMode","prerender","emitUpdate","data","pool","totalSize","ready","hoverKey","computed","sizes","accumulator","field","computedMinSize","current","i","l","size","$_computedMinItemSize","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","mounted","$nextTick","beforeDestroy","removeListeners","methods","viewPosition","view","isVertical","verticalAxis","position","transform","addView","index","item","key","nonReactive","id","used","configurable","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","$emit","handleScroll","event","requestAnimationFrame","continuous","clearTimeout","$_refreshTimout","setTimeout","handleVisibilityChange","isVisible","entry","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","scroll","getScroll","positionDiff","start","end","h","a","b","oldI","Math","ceil","config","itemsLimitError","$_continuous","clear","findIndex","unusedIndex","v","Error","pop","$_sortTimer","sortViews","getListenerTarget","target","ScrollParent","$el","document","documentElement","body","el","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","removeEventListener","scrollToItem","scrollToPosition","console","log","sort","viewA","viewB","RecycleScroller","inheritAttrs","provide","$_resizeObserver","entries","isArray","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","vscrollResizeObserver","active","validSizes","itemsWithSize","result","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","$_updates","$_undefinedSizes","activated","deactivated","onScrollerResize","scroller","$refs","onScrollerVisible","force","getItemSize","undefined","indexOf","scrollToBottom","$_scrollingToBottom","scrollHeight","cb","inject","watchData","sizeDependencies","emitResize","tag","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","offsetWidth","offsetHeight","applySize","round","$set","observe","parentNode","onResize","unobserve","render","$slots","idProp","vm","store","Vue","idState","$_id","$_getId","call","$_updateIdState","beforeUpdate","$_idStateInit","factory","$options","warn","registerComponents","prefix","component","DynamicScroller","DynamicScrollerItem","plugin","version","VERSION","install","options","finalOptions","assign","installComponents","componentsPrefix","GlobalVue","global","use"],"mappings":"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"}